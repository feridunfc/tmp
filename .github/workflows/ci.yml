name: ci

on:
  push:
    branches: ['**']
    paths-ignore:
      - 'third_party/**'
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'third_party/**'
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # fallback: repo dosyaları yoksa bile lint/test çalışsın
          pip install pytest pytest-cov ruff black mypy pandas-stubs types-PyYAML types-python-dateutil || true

      - name: Lint (ruff)
        run: ruff check .

      - name: Format (black --check)
        run: black --check .

      - name: Typecheck (mypy)
        run: mypy --config-file pyproject.toml src

      - name: Test + Coverage
        env:
          PYTHONPATH: src
        run: pytest -q --ignore=third_party --maxfail=1 --disable-warnings --cov=src --cov-report=xml

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml
          if-no-files-found: ignore
